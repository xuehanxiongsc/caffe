name: "segmentation"
layer {
  name: "data"
  type: "SegData"
  top: "image"
  top: "label"
  transform_param {
    crop_size: 128
    mirror: true
  }
  data_param {
    source: "/mnt/disks/data/data/fcn/portrait_train"
    batch_size: 256
    backend: LMDB
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "data"
  type: "SegData"
  top: "image"
  top: "label"
  transform_param {
    crop_size: 128
  }
  data_param {
    source: "/mnt/disks/data/data/fcn/portrait_val"
    batch_size: 256
    backend: LMDB
  }
  include {
    phase: TEST
  }
}
layer {
  name: "conv1" 
  type: "Convolution"
  bottom: "image"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1_bn"
  top: "conv1_bn"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2" 
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BatchNorm"
  bottom: "conv2"
  top: "conv2_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv2_relu"
  type: "ReLU"
  bottom: "conv2_bn"
  top: "conv2_bn"
}

layer {
  name: "conv3" 
  type: "Convolution"
  bottom: "conv1_bn"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 16
    pad: 0
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BatchNorm"
  bottom: "conv3"
  top: "conv3_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv3_relu"
  type: "ReLU"
  bottom: "conv3_bn"
  top: "conv3_bn"
}

layer {
  name: "conv4" 
  type: "Convolution"
  bottom: "conv3_bn"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BatchNorm"
  bottom: "conv4"
  top: "conv4_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv4_relu"
  type: "ReLU"
  bottom: "conv4_bn"
  top: "conv4_bn"
}

layer {
  name: "conv5" 
  type: "Convolution"
  bottom: "conv4_bn"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv5_bn"
  type: "BatchNorm"
  bottom: "conv5"
  top: "conv5_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv5_relu"
  type: "ReLU"
  bottom: "conv5_bn"
  top: "conv5_bn"
}
layer {
  name: "eltwise"
  type: "Eltwise"
  bottom: "conv5_bn"
  bottom: "conv2_bn"
  top: "eltwise"
  eltwise_param { operation: SUM }
}
layer {
  name: "conv6" 
  type: "Convolution"
  bottom: "eltwise"
  top: "conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv6_bn"
  type: "BatchNorm"
  bottom: "conv6"
  top: "conv6_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv6_relu"
  type: "ReLU"
  bottom: "conv6_bn"
  top: "conv6_bn"
}

layer {
  name: "conv7" 
  type: "Convolution"
  bottom: "conv6_bn"
  top: "conv7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv7_bn"
  type: "BatchNorm"
  bottom: "conv7"
  top: "conv7_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv7_relu"
  type: "ReLU"
  bottom: "conv7_bn"
  top: "conv7_bn"
}

layer {
  name: "conv8" 
  type: "Convolution"
  bottom: "conv7_bn"
  top: "conv8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv8_bn"
  type: "BatchNorm"
  bottom: "conv8"
  top: "conv8_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv8_relu"
  type: "ReLU"
  bottom: "conv8_bn"
  top: "conv8_bn"
}

layer {
  name: "conv9" 
  type: "Convolution"
  bottom: "conv8_bn"
  top: "conv9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv9_bn"
  type: "BatchNorm"
  bottom: "conv9"
  top: "conv9_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "conv9_relu"
  type: "ReLU"
  bottom: "conv9_bn"
  top: "conv9_bn"
}

layer {
  name: "fc0" 
  type: "Convolution"
  bottom: "conv9_bn"
  top: "fc0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "fc0_bn"
  type: "BatchNorm"
  bottom: "fc0"
  top: "fc0_bn"
  param {lr_mult: 0}
  param {lr_mult: 0}
  param {lr_mult: 0}
}
layer {
  name: "fc0_relu"
  type: "ReLU"
  bottom: "fc0_bn"
  top: "fc0_bn"
}

layer {
  name: "fc1" 
  type: "Convolution"
  bottom: "fc0_bn"
  top: "fc1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    dilation: 1
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
 }
}

layer {
  name: "upsample" 
  type: "Convolution"
  bottom: "fc1"
  top: "upsample"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  }
  convolution_param {
    dilation: 1
    num_output: 4
    pad: 0
    kernel_size: 8
    stride: 4
    bias_term: false
    weight_filler {
      type: "xavier"
    }
 }
}

layer {
  name: "cropscore"
  type: "Crop"
  bottom: "upsample"
  bottom: "image"
  top: "cropscore"
  crop_param {
    axis: 1
    offset: 2
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "cropscore"
  bottom: "label"
  top: "loss"
  loss_weight: 1
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "cropscore"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TRAIN
  }
  accuracy_param {
    top_k: 1
  }
}

