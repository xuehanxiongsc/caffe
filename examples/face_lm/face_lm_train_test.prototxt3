name: "face_lm"
layer {
  name: "face_lm"
  type: "Data"
  top: "image_data"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/face_lm/image_mean.binaryproto"
    scale: 0.00390625
  }
  data_param {
    source: "examples/face_lm/face_image_train_small_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "face_lm"
  type: "Data"
  top: "landmark_data"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.003
  }
  data_param {
    source: "examples/face_lm/face_lm_train_small_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "face_lm"
  type: "Data"
  top: "image_data"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/face_lm/image_mean.binaryproto"
    scale: 0.00390625
  }
  data_param {
    source: "examples/face_lm/face_image_test_small_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "face_lm"
  type: "Data"
  top: "landmark_data"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.003
  }
  data_param {
    source: "examples/face_lm/face_lm_test_small_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "image_data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    kernel_size: 16
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bn1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "bn1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "bn2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn3"
  type: "BatchNorm"
  bottom: "conv3"
  top: "bn3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "bn3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "bn3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "bn4"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "bn4"
  top: "bn4"
}
layer {
  name: "conv5_reduce"
  type: "Convolution"
  bottom: "bn4"
  top: "conv5_reduce"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5_reduce"
  type: "ReLU"
  bottom: "conv5_reduce"
  top: "conv5_reduce"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv5_reduce"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn5"
  type: "BatchNorm"
  bottom: "conv5"
  top: "bn5"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "bn5"
  top: "bn5"
}
layer {
  name: "conv6_reduce"
  type: "Convolution"
  bottom: "bn5"
  top: "conv6_reduce"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu6_reduce"
  type: "ReLU"
  bottom: "conv6_reduce"
  top: "conv6_reduce"
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "conv6_reduce"
  top: "conv6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn6"
  type: "BatchNorm"
  bottom: "conv6"
  top: "bn6"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "bn6"
  top: "bn6"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "bn6"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 132
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "val_loss"
  type: "EuclideanLoss"
  bottom: "ip1"
  bottom: "landmark_data"
  top: "val_loss"
  include {
    phase: TEST
  }
}
layer {
  name: "train_loss"
  type: "EuclideanLoss"
  bottom: "ip1"
  bottom: "landmark_data"
  top: "train_loss"
  include {
    phase: TRAIN
  }
}
